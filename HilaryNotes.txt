The work I would like you to read is in the subfolder LinearAdvection/Numerics_tosubmit. There is a README2 file inside it that briefly explains the content of the subfolder ( I added it in a later commit with ID 5964f67b62b56d431d57653e0b58de096c0a36ca. )

Hilary's comments on commit id 5964f67

Mark: 5/5
You have received full marks for submitting code for comment and using git. 

Good start solving the linear advection equation.

Some of feedback in the file genericFeedback.txt is relevant to you. Here are some comments that are specific to you. You will need to take this feedback into account for your final code submission in order to achieve a good mark.

0. Good that you are making frequent commits with git ——

1. You should have a .gitignore file —- 

2. Good README file. —- 

3. 4 spaces is sufficient for indentation. 8 seems excessive. —

4. Files need comments at the top describing what they do and functions need doc-strings. —

5. Good checking but instead of:   —— 
if np.abs(phi_0[0] -phi_0[-1])> 10**(-10):

use

SMALL = 1e-10
(possibly defined as a global variable)


if np.abs(phi_0[0] -phi_0[-1]) > SMALL:

6. Analytical_Periodic seems like a very strange name for a function. I cannot work out what this function does and I feel sure that your code could be significantly simpler if re-designed. Have a look at my code for linear advection in
https://bitbucket.org/mpecdt/mpecdt/
under
source/hilary/code. —-

7. Why did you choose to implement CTBS? CTCS or FTBS should be your default schemes. If you choose anything else you should have a good reason to think that it is going to be better in some way. CTBS suffers from every conceivable problem of linear finite difference schemes.

8. If you have already done one timestep then you should do nt-1 following time-steps which is:  ——
for it in range(1,nt):
not
for it in range(2,nt):

9. Try to reduce code duplication for plotting by using functions —

